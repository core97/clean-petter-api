generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Breed {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  petAds    PetAd[]  @relation(fields: [petAdsId], references: [id])
  petAdsId  String[] @db.ObjectId
  petType   PetType
}

model PetAd {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  address   Address
  breeds    Breed[]        @relation(fields: [breedIds], references: [id])
  breedIds  String[]       @db.ObjectId
  createdAt DateTime       @default(now())
  name      String
  user      User           @relation(fields: [userId], references: [id])
  userId    String         @db.ObjectId
  requests  PetAdRequest[]
}

model PetAdRequest {
  id               String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt        DateTime      @default(now())
  interestedUser   User          @relation(fields: [interestedUserId], references: [id])
  interestedUserId String        @db.ObjectId
  petAd            PetAd         @relation(fields: [petAdId], references: [id])
  petAdId          String        @db.ObjectId
  status           RequestStatus
  visits           Visit[]
}

model User {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime       @default(now())
  email        String         @unique
  name         String
  petAds       PetAd[]
  password     String
  address      Address?
  preadoption  Preadoption?
  visits       Visit[]
  petAdRequest PetAdRequest[]
}

model Visit {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime     @default(now())
  user           User         @relation(fields: [userId], references: [id])
  userId         String       @db.ObjectId
  status         VisitStatus  @default(PENDING)
  date           DateTime
  userToConfirm  String       @db.ObjectId
  petAdRequest   PetAdRequest @relation(fields: [petAdRequestId], references: [id])
  petAdRequestId String       @db.ObjectId
}

type Address {
  city    String
  country CountryIso
}

type Preadoption {
  formId     String
  responseId String
}

enum CountryIso {
  ES
}

enum PetType {
  CAT
  DOG
}

enum RequestStatus {
  ACCEPTED
  PENDING
  REJECTED
}

enum VisitStatus {
  PENDING
  CONFIRMED
}
